{"ast":null,"code":"var _jsxFileName = \"/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/InstrumentalsContainter.js\";\nimport React, { Component } from 'react';\nimport Instrumentals from '../components/Instrumentals';\nimport { connect } from 'react-redux';\nimport { getTracks } from '../actions/tracks';\nimport Loading from '../components/Loading';\n\nclass InstrumentalsContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const instrumentals = this.props.instrumental.map((links, i) => /*#__PURE__*/React.createElement(Instrumentals, {\n      key: i,\n      instrumental: links.instrumental,\n      notes: links.notes,\n      link: links,\n      title: this.props.track.find(title => title.id === links.track_id).title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }));\n    debugger;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }) : instrumentals));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    track: state.trackReducer.tracks.map(track => track),\n    instrumental: state.trackReducer.tracks.map(track => track.links[0])\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTracks\n})(InstrumentalsContainer);","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/InstrumentalsContainter.js"],"names":["React","Component","Instrumentals","connect","getTracks","Loading","InstrumentalsContainer","componentDidMount","props","render","instrumentals","instrumental","map","links","i","notes","track","find","title","id","track_id","loading","mapStateToProps","state","trackReducer","tracks"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAQC,aAAR,MAA4B,6BAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,sBAAN,SAAqCL,SAArC,CAA+C;AAC7CM,EAAAA,iBAAiB,GAAE;AACnB,SAAKC,KAAL,CAAWJ,SAAX;AACC;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAQC,CAAR,kBAChD,oBAAC,aAAD;AACE,MAAA,GAAG,EAAGA,CADR;AAEE,MAAA,YAAY,EAAGD,KAAK,CAACF,YAFvB;AAGE,MAAA,KAAK,EAAGE,KAAK,CAACE,KAHhB;AAIE,MAAA,IAAI,EAAGF,KAJT;AAKE,MAAA,KAAK,EAAG,KAAKL,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,CAAsBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,KAAK,CAACO,QAAlD,EAA8DF,KALxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAAtB;AASH;AACG,wBAEE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKV,KAAL,CAAWa,OAAX,gBAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAkCX,aAAxC,CADF,CAFF;AAMD;;AAtB4C;;AAyB/C,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAM;AACJP,IAAAA,KAAK,EAAEO,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAA0Bb,GAA1B,CAA8BI,KAAK,IAAIA,KAAvC,CADH;AAEJL,IAAAA,YAAY,EAAEY,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAA0Bb,GAA1B,CAA8BI,KAAK,IAAIA,KAAK,CAACH,KAAN,CAAY,CAAZ,CAAvC;AAFV,GAAN;AAID,CALD;;AAOA,eAAeV,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,sBAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport  Instrumentals  from '../components/Instrumentals'\nimport {connect} from 'react-redux'\nimport { getTracks } from '../actions/tracks'\nimport Loading from '../components/Loading'\nclass InstrumentalsContainer extends Component {\n  componentDidMount(){\n  this.props.getTracks()\n  }\n\n  render() {     \n    const instrumentals = this.props.instrumental.map((links, i)  => \n      <Instrumentals \n        key={ i } \n        instrumental={ links.instrumental } \n        notes={ links.notes} \n        link={ links }\n        title={ this.props.track.find(title => title.id === links.track_id  ).title }\n      />\n    )\n debugger\n    return (\n     \n      <>\n        <ul>{ this.props.loading ?  <Loading/>: instrumentals }</ul>\n      </>\n    )\n  }  \n}\n\nconst mapStateToProps = (state) => {\n  return{\n    track: state.trackReducer.tracks.map(track => track),\n    instrumental: state.trackReducer.tracks.map(track => track.links[0]),\n  }\n}\n\nexport default connect(mapStateToProps, { getTracks })(InstrumentalsContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}