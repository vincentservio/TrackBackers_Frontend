{"ast":null,"code":"export const getTracks = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_TRACKS'\n    });\n    return fetch('http://localhost:3001/tracks').then(res => res.json()).then(tracks => dispatch({\n      type: \"TRACKS_LOADED\",\n      payload: tracks\n    }));\n  };\n};\nexport const addTrack = track => {\n  return dispatch => {\n    dispatch({\n      type: \"ADDING_TRACK\"\n    });\n    fetch('http://localhost:3001/tracks', {\n      method: \"POST\",\n      body: JSON.stringify(track),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(track => dispatch({\n      type: \"TRACK_ADDED\",\n      payload: track\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/actions/tracks.js"],"names":["getTracks","dispatch","type","fetch","then","res","json","tracks","payload","addTrack","track","method","body","JSON","stringify","headers"],"mappings":"AACA,OAAO,MAAMA,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WAAOC,KAAK,CAAC,8BAAD,CAAL,CACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,MAAM,IAAIN,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,eAAP;AAAwBM,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAFjB,CAAP;AAGH,GALD;AAMH,CAPM;AAQP,OAAO,MAAME,QAAQ,GAAIC,KAAD,IAAW;AAE/B,SAAQT,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACDC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACjCQ,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAF2B;AAGjCK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHwB,KAAjC,CAAL,CAOFX,IAPE,CAOGC,GAAG,IAAKA,GAAG,CAACC,IAAJ,EAPX,EAQFF,IARE,CAQGM,KAAK,IAAIT,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,aAAN;AAAqBM,MAAAA,OAAO,EAAEE;AAA9B,KAAD,CARpB;AASN,GAXG;AAYH,CAdM","sourcesContent":["\nexport const getTracks = () => {\n    return (dispatch) => {\n        dispatch({type: 'LOADING_TRACKS'})\n        return fetch('http://localhost:3001/tracks')\n        .then(res => res.json())\n        .then(tracks => dispatch({type: \"TRACKS_LOADED\", payload: tracks}) )\n    }\n}\nexport const addTrack = (track) => {\n\n    return (dispatch) => { \n        dispatch({type: \"ADDING_TRACK\"})\n       fetch('http://localhost:3001/tracks', {\n            method: \"POST\",\n            body: JSON.stringify(track),\n            headers: {\n                'Content-Type': 'application/json'\n            }                                                                          \n        })     Â             \n    .then(res  => res.json()) \n    .then(track => dispatch({type:\"TRACK_ADDED\", payload: track}))\n} \n}"]},"metadata":{},"sourceType":"module"}