{"ast":null,"code":"var _jsxFileName = \"/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTracks } from \"../actions/tracks\";\nimport Tracks from \"../components/Tracks\";\nimport Loading from \"../components/Loading\";\n\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    // const handleDelete = () => {};\n    const tracks = this.props.tracks.map((track, i) => /*#__PURE__*/React.createElement(Tracks, {\n      key: i,\n      title: track.title,\n      status: track.status,\n      id: track.id,\n      track: track,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"TrackList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }\n    }) : tracks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delete: todoText => dispatch({\n      type: \"DELETE_TODO\",\n      payload: todoText\n    })\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTracks\n})(TracksContainer);","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js"],"names":["React","Component","connect","getTracks","Tracks","Loading","TracksContainer","componentDidMount","props","render","tracks","map","track","i","title","status","id","loading","mapStateToProps","state","trackReducer","mapDispatchToProps","dispatch","delete","todoText","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACtCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,SAAX;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP;AAEA,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,kBACnC,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,MAAA,MAAM,EAAEF,KAAK,CAACG,MAHhB;AAIE,MAAA,EAAE,EAAEH,KAAK,CAACI,EAJZ;AAKE,MAAA,KAAK,EAAEJ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AASA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWS,OAAX,gBAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAmCP,MAAxC,CAFF,CADF;AAMD;;AAtBqC;;AAwBxC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,MAAM,EAAES,KAAK,CAACC,YAAN,CAAmBV,MADtB;AAELO,IAAAA,OAAO,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AAFvB,GAAP;AAID,CALD;;AAOA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,MAAM,EAAGC,QAAD,IAAcF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAEF;AAA/B,KAAD;AADzB,GAAP;AAGD,CAJD;;AAKA,eAAetB,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAAsCG,eAAtC,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getTracks} from \"../actions/tracks\";\nimport Tracks from \"../components/Tracks\";\nimport Loading from \"../components/Loading\";\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n  render() {\n    // const handleDelete = () => {};\n\n    const tracks = this.props.tracks.map((track, i) => (\n      <Tracks\n        key={i}\n        title={track.title}\n        status={track.status}\n        id={track.id}\n        track={track}\n      />\n    ));\n    return (\n      <div>\n        <h1>TrackList</h1>\n        <ul>{this.props.loading ? <Loading /> : tracks}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    delete: (todoText) => dispatch({type: \"DELETE_TODO\", payload: todoText}),\n  };\n};\nexport default connect(mapStateToProps, {getTracks})(TracksContainer);\n"]},"metadata":{},"sourceType":"module"}