{"ast":null,"code":"import _toConsumableArray from\"/Users/princetape/Development/creations/TrackBackers/front-tt/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/princetape/Development/creations/TrackBackers/front-tt/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{tracks:[],loading:false};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"LOADING_TRACKS\":return _objectSpread(_objectSpread({},state),{},{loading:true});case\"TRACKS_LOADED\":return _objectSpread(_objectSpread({},state),{},{tracks:action.payload,loading:false});case\"ADDING_TRACK\":return _objectSpread(_objectSpread({},state),{},{loading:true});case\"TRACK_ADDED\":return _objectSpread(_objectSpread({},state),{},{tracks:[].concat(_toConsumableArray(state.tracks),[action.payload]),loading:false});case\"REMOVE_TRACK\":return _objectSpread({},state.tracks.filter(function(track){return track!==action.payload;}));default:return state;}});","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/reducers/trackReducer.js"],"names":["state","tracks","loading","action","type","payload","filter","track"],"mappings":"uSAAA,eAAe,UAAkD,IAAjDA,CAAAA,KAAiD,2DAAzC,CAACC,MAAM,CAAE,EAAT,CAAaC,OAAO,CAAE,KAAtB,CAAyC,IAAXC,CAAAA,MAAW,2CAC/D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,gBAAL,CACE,sCACKJ,KADL,MAEEE,OAAO,CAAE,IAFX,GAKF,IAAK,eAAL,CACE,sCACKF,KADL,MAEEC,MAAM,CAAEE,MAAM,CAACE,OAFjB,CAGEH,OAAO,CAAE,KAHX,GAMF,IAAK,cAAL,CACE,sCACKF,KADL,MAEEE,OAAO,CAAE,IAFX,GAIF,IAAK,aAAL,CACE,sCACKF,KADL,MAEEC,MAAM,8BAAMD,KAAK,CAACC,MAAZ,GAAoBE,MAAM,CAACE,OAA3B,EAFR,CAGEH,OAAO,CAAE,KAHX,GAMF,IAAK,cAAL,CACE,wBACKF,KAAK,CAACC,MAAN,CAAaK,MAAb,CAAoB,SAACC,KAAD,QAAWA,CAAAA,KAAK,GAAKJ,MAAM,CAACE,OAA5B,EAApB,CADL,EAGF,QACE,MAAOL,CAAAA,KAAP,CA/BJ,CAiCD,CAlCD","sourcesContent":["export default (state = {tracks: [], loading: false}, action) => {\n  switch (action.type) {\n    case \"LOADING_TRACKS\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"TRACKS_LOADED\":\n      return {\n        ...state,\n        tracks: action.payload,\n        loading: false,\n      };\n\n    case \"ADDING_TRACK\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"TRACK_ADDED\":\n      return {\n        ...state,\n        tracks: [...state.tracks, action.payload],\n        loading: false,\n      };\n\n    case \"REMOVE_TRACK\":\n      return {\n        ...state.tracks.filter((track) => track !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}