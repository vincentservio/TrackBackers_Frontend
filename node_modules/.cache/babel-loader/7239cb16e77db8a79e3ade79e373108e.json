{"ast":null,"code":"var _jsxFileName = \"/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/InstrumentalsContainter.js\";\nimport React, { Component } from \"react\";\nimport Instrumentals from \"../components/Instrumentals\";\nimport { connect } from \"react-redux\";\nimport { getTracks } from \"../actions/tracks\";\nimport Loading from \"../components/Loading\";\n\nclass InstrumentalsContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const instrumentals = this.props.instrumental.map((links, i) => /*#__PURE__*/React.createElement(Instrumentals, {\n      key: i,\n      instrumental: links.instrumental,\n      notes: links.notes,\n      link: links,\n      title: this.props.track.find(title => title.id === links.track_id).title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    })); //  debugger\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }\n    }) : instrumentals));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    track: state.trackReducer.tracks.map(track => track),\n    instrumental: state.trackReducer.tracks.map(track => track.links[0])\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTracks\n})(InstrumentalsContainer);","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/InstrumentalsContainter.js"],"names":["React","Component","Instrumentals","connect","getTracks","Loading","InstrumentalsContainer","componentDidMount","props","render","instrumentals","instrumental","map","links","i","notes","track","find","title","id","track_id","loading","mapStateToProps","state","trackReducer","tracks"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,sBAAN,SAAqCL,SAArC,CAA+C;AAC7CM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,SAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAQC,CAAR,kBAChD,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,YAAY,EAAED,KAAK,CAACF,YAFtB;AAGE,MAAA,KAAK,EAAEE,KAAK,CAACE,KAHf;AAIE,MAAA,IAAI,EAAEF,KAJR;AAKE,MAAA,KAAK,EACH,KAAKL,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,CAAuBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,KAAK,CAACO,QAApD,EAA8DF,KANlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAAtB,CADO,CAYP;;AACA,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWa,OAAX,gBAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAmCX,aAAxC,CADF,CADF;AAKD;;AAvB4C;;AA0B/C,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAA0Bb,GAA1B,CAA+BI,KAAD,IAAWA,KAAzC,CADF;AAELL,IAAAA,YAAY,EAAEY,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAA0Bb,GAA1B,CAA+BI,KAAD,IAAWA,KAAK,CAACH,KAAN,CAAY,CAAZ,CAAzC;AAFT,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAACmB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAAsCE,sBAAtC,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Instrumentals from \"../components/Instrumentals\";\nimport {connect} from \"react-redux\";\nimport {getTracks} from \"../actions/tracks\";\nimport Loading from \"../components/Loading\";\nclass InstrumentalsContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const instrumentals = this.props.instrumental.map((links, i) => (\n      <Instrumentals\n        key={i}\n        instrumental={links.instrumental}\n        notes={links.notes}\n        link={links}\n        title={\n          this.props.track.find((title) => title.id === links.track_id).title\n        }\n      />\n    ));\n    //  debugger\n    return (\n      <>\n        <ul>{this.props.loading ? <Loading /> : instrumentals}</ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    track: state.trackReducer.tracks.map((track) => track),\n    instrumental: state.trackReducer.tracks.map((track) => track.links[0]),\n  };\n};\n\nexport default connect(mapStateToProps, {getTracks})(InstrumentalsContainer);\n"]},"metadata":{},"sourceType":"module"}