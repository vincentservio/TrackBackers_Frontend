{"ast":null,"code":"var _jsxFileName = \"/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTracks } from \"../actions/tracks\";\nimport Tracks from \"../components/Tracks\";\nimport Loading from \"../components/Loading\";\n\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const handleDelete = () => {};\n\n    const tracks = this.props.tracks.map((track, i) => /*#__PURE__*/React.createElement(Tracks, {\n      key: i,\n      title: track.title,\n      status: track.status,\n      id: track.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"TrackList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 35\n      }\n    }) : tracks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTracks,\n  handleDelete\n})(TracksContainer);","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js"],"names":["React","Component","connect","getTracks","Tracks","Loading","TracksContainer","componentDidMount","props","render","handleDelete","tracks","map","track","i","title","status","id","loading","mapStateToProps","state","trackReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACtCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,SAAX;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AAEA,UAAMC,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,kBACnC,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAED,KAAK,CAACE,KAA7B;AAAoC,MAAA,MAAM,EAAEF,KAAK,CAACG,MAAlD;AAA0D,MAAA,EAAE,EAAEH,KAAK,CAACI,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWU,OAAX,gBAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAmCP,MAAxC,CAFF,CADF;AAMD;;AAhBqC;;AAkBxC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,MAAM,EAAES,KAAK,CAACC,YAAN,CAAmBV,MADtB;AAELO,IAAAA,OAAO,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AAFvB,GAAP;AAID,CALD;;AAMA,eAAehB,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,SAAD;AAAYO,EAAAA;AAAZ,CAAlB,CAAP,CACbJ,eADa,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getTracks} from \"../actions/tracks\";\nimport Tracks from \"../components/Tracks\";\nimport Loading from \"../components/Loading\";\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n  render() {\n    const handleDelete = () => {};\n\n    const tracks = this.props.tracks.map((track, i) => (\n      <Tracks key={i} title={track.title} status={track.status} id={track.id} />\n    ));\n    return (\n      <div>\n        <h1>TrackList</h1>\n        <ul>{this.props.loading ? <Loading /> : tracks}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading,\n  };\n};\nexport default connect(mapStateToProps, {getTracks, handleDelete})(\n  TracksContainer\n);\n"]},"metadata":{},"sourceType":"module"}