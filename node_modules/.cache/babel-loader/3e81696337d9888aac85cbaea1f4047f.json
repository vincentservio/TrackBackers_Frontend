{"ast":null,"code":"var _jsxFileName = \"/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTracks } from '../actions/tracks';\nimport Tracks from '../components/Tracks';\nimport Loading from '../components/Loading';\n\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const tracks = this.props.tracks.map((track, i) => /*#__PURE__*/React.createElement(Tracks, {\n      key: i,\n      title: track.title,\n      status: track.status,\n      id: track.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"TrackList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 36\n      }\n    }) : tracks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTracks\n})(TracksContainer);","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/container/TracksContainer.js"],"names":["React","Component","connect","getTracks","Tracks","Loading","TracksContainer","componentDidMount","props","render","tracks","map","track","i","title","status","id","loading","mapStateToProps","state","trackReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACtCM,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWL,SAAX;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,kBACnC,oBAAC,MAAD;AAAS,MAAA,GAAG,EAAGA,CAAf;AAAmB,MAAA,KAAK,EAAGD,KAAK,CAACE,KAAjC;AAA0C,MAAA,MAAM,EAAGF,KAAK,CAACG,MAAzD;AAAkE,MAAA,EAAE,EAAGH,KAAK,CAACI,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWS,OAAX,gBAAsB,oBAAE,OAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAoCP,MADzC,CAFF,CADF;AAQD;;AAhBqC;;AAkBxC,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAM;AACJT,IAAAA,MAAM,EAAES,KAAK,CAACC,YAAN,CAAmBV,MADvB;AAEJO,IAAAA,OAAO,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AAFxB,GAAN;AAID,CALD;;AAMA,eAAef,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAwCG,eAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getTracks } from '../actions/tracks'\nimport Tracks from '../components/Tracks';\nimport Loading from '../components/Loading'\nclass TracksContainer extends Component {\n  componentDidMount(){\n    this.props.getTracks()\n  }\n  render() {\n    const tracks = this.props.tracks.map((track, i)  => \n      <Tracks  key={ i } title={ track.title }  status={ track.status } id={ track.id } />\n    )\n    return (\n      <div>\n        <h1>TrackList</h1>\n        <ul>\n            {this.props.loading ?  < Loading />: tracks }\n        </ul>\n      </div>\n    )\n  }  \n}\nconst mapStateToProps = state => {\n  return{\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading\n  }\n}\nexport default connect(mapStateToProps, { getTracks })(TracksContainer);\n"]},"metadata":{},"sourceType":"module"}