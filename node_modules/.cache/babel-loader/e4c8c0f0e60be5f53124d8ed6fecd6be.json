{"ast":null,"code":"export default ((state = {\n  tracks: [],\n  loading: false\n}, action) => {\n  switch (action.type) {\n    case \"LOADING_TRACKS\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"TRACKS_LOADED\":\n      return { ...state,\n        tracks: action.payload,\n        loading: false\n      };\n\n    case \"ADDING_TRACK\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"TRACK_ADDED\":\n      return { ...state,\n        tracks: [...state.tracks, action.payload],\n        loading: false\n      };\n\n    case \"REMOVE_TRACK\":\n      debugger;\n      return { ...state.tracks.filter(track => track !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/reducers/trackReducer.js"],"names":["state","tracks","loading","action","type","payload","filter","track"],"mappings":"AAAA,gBAAe,CAACA,KAAK,GAAG;AAACC,EAAAA,MAAM,EAAE,EAAT;AAAaC,EAAAA,OAAO,EAAE;AAAtB,CAAT,EAAuCC,MAAvC,KAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELE,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELC,QAAAA,MAAM,EAAEE,MAAM,CAACE,OAFV;AAGLH,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAK,cAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELE,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELC,QAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,EAAkBE,MAAM,CAACE,OAAzB,CAFH;AAGLH,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAK,cAAL;AACE;AACA,aAAO,EACL,GAAGF,KAAK,CAACC,MAAN,CAAaK,MAAb,CAAqBC,KAAD,IAAWA,KAAK,KAAKJ,MAAM,CAACE,OAAhD;AADE,OAAP;;AAGF;AACE,aAAOL,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["export default (state = {tracks: [], loading: false}, action) => {\n  switch (action.type) {\n    case \"LOADING_TRACKS\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"TRACKS_LOADED\":\n      return {\n        ...state,\n        tracks: action.payload,\n        loading: false,\n      };\n\n    case \"ADDING_TRACK\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"TRACK_ADDED\":\n      return {\n        ...state,\n        tracks: [...state.tracks, action.payload],\n        loading: false,\n      };\n\n    case \"REMOVE_TRACK\":\n      debugger;\n      return {\n        ...state.tracks.filter((track) => track !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}