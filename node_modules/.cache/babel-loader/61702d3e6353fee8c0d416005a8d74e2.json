{"ast":null,"code":"export var getTracks=function getTracks(){return function(dispatch){dispatch({type:\"LOADING_TRACKS\"});return fetch(\"http://localhost:3001/tracks\").then(function(res){return res.json();}).then(function(tracks){return dispatch({type:\"TRACKS_LOADED\",payload:tracks});});};};export var addTrack=function addTrack(track){return function(dispatch){dispatch({type:\"ADDING_TRACK\"});fetch(\"http://localhost:3001/tracks\",{method:\"POST\",body:JSON.stringify(track),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();}).then(function(track){return dispatch({type:\"TRACK_ADDED\",payload:track});});};};export var removeTrack=function removeTrack(track){return function(dispatch){dispatch({type:\"REMOVE_TRACK\"});debugger;fetch(\"http://localhost:3001/tracks\",{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}});debugger;// .then((response) => response.json());\n};};","map":{"version":3,"sources":["/Users/princetape/Development/creations/TrackBackers/front-tt/src/actions/tracks.js"],"names":["getTracks","dispatch","type","fetch","then","res","json","tracks","payload","addTrack","track","method","body","JSON","stringify","headers","removeTrack","Accept"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAAC,CAACC,IAAI,CAAE,gBAAP,CAAD,CAAR,CACA,MAAOC,CAAAA,KAAK,CAAC,8BAAD,CAAL,CACJC,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAEC,SAACG,MAAD,QAAYN,CAAAA,QAAQ,CAAC,CAACC,IAAI,CAAE,eAAP,CAAwBM,OAAO,CAAED,MAAjC,CAAD,CAApB,EAFD,CAAP,CAGD,CALD,CAMD,CAPM,CAQP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACjC,MAAO,UAACT,QAAD,CAAc,CACnBA,QAAQ,CAAC,CAACC,IAAI,CAAE,cAAP,CAAD,CAAR,CACAC,KAAK,CAAC,8BAAD,CAAiC,CACpCQ,MAAM,CAAE,MAD4B,CAEpCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAF8B,CAGpCK,OAAO,CAAE,CACP,eAAgB,kBADT,CAH2B,CAAjC,CAAL,CAOGX,IAPH,CAOQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPR,EAQGF,IARH,CAQQ,SAACM,KAAD,QAAWT,CAAAA,QAAQ,CAAC,CAACC,IAAI,CAAE,aAAP,CAAsBM,OAAO,CAAEE,KAA/B,CAAD,CAAnB,EARR,EASD,CAXD,CAYD,CAbM,CAeP,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACN,KAAD,CAAW,CACpC,MAAO,UAACT,QAAD,CAAc,CACnBA,QAAQ,CAAC,CAACC,IAAI,CAAE,cAAP,CAAD,CAAR,CACA,SACAC,KAAK,CAAC,8BAAD,CAAiC,CACpCQ,MAAM,CAAE,QAD4B,CAEpCI,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPE,MAAM,CAAE,kBAFD,CAF2B,CAAjC,CAAL,CAOA,SACA;AACD,CAZD,CAaD,CAdM","sourcesContent":["export const getTracks = () => {\n  return (dispatch) => {\n    dispatch({type: \"LOADING_TRACKS\"});\n    return fetch(\"http://localhost:3001/tracks\")\n      .then((res) => res.json())\n      .then((tracks) => dispatch({type: \"TRACKS_LOADED\", payload: tracks}));\n  };\n};\nexport const addTrack = (track) => {\n  return (dispatch) => {\n    dispatch({type: \"ADDING_TRACK\"});\n    fetch(\"http://localhost:3001/tracks\", {\n      method: \"POST\",\n      body: JSON.stringify(track),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((track) => dispatch({type: \"TRACK_ADDED\", payload: track}));\n  };\n};\n\nexport const removeTrack = (track) => {\n  return (dispatch) => {\n    dispatch({type: \"REMOVE_TRACK\"});\n    debugger;\n    fetch(\"http://localhost:3001/tracks\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    debugger;\n    // .then((response) => response.json());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}