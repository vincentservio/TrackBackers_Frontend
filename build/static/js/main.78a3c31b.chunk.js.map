{"version":3,"sources":["components/Home.js","actions/tracks.js","components/Tracks.js","components/Loading.js","container/TracksContainer.js","components/Nav.js","container/TrackForm.js","components/Instrumentals.js","container/InstrumentalsContainter.js","components/Footer.js","App.js","serviceWorker.js","reducers/index.js","reducers/trackReducer.js","index.js"],"names":["Home","className","to","src","alt","Component","getTracks","dispatch","type","fetch","then","res","json","tracks","payload","connect","removeTrack","track","method","headers","Accept","title","status","id","props","key","onClick","remove","Loading","TracksContainer","this","map","i","delete","loading","state","trackReducer","Nav","TrackForm","instrumental","notes","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","links_attributes","addTrack","onSubmit","onChange","body","JSON","stringify","Instrumentals","show","note","handleClick","link","split","url","InstrumentalsContainer","instrumentals","links","find","track_id","Footer","App","path","exact","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78a3c31b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <h1>Welcome to TrackBackers</h1>\n        <h3>Begin by clicking below to add track:</h3>\n\n        <Link to=\"/tracks/new\">\n          <img\n            src=\"https://media1.tenor.com/images/8755c322542a57dadf787cbec2d92b50/tenor.gif?itemid=16348608\"\n            className=\"home-icon\"\n            alt=\"logo\"\n          />{\" \"}\n        </Link>\n      </div>\n    );\n  }\n}\n","export const getTracks = () => {\n  return (dispatch) => {\n    dispatch({type: \"LOADING_TRACKS\"});\n    return fetch(\"http://localhost:3001/tracks\")\n      .then((res) => res.json())\n      .then((tracks) => dispatch({type: \"TRACKS_LOADED\", payload: tracks}));\n  };\n};\nexport const addTrack = (track) => {\n  return (dispatch) => {\n    dispatch({type: \"ADDING_TRACK\"});\n    fetch(\"http://localhost:3001/tracks\", {\n      method: \"POST\",\n      body: JSON.stringify(track),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((track) => dispatch({type: \"TRACK_ADDED\", payload: track}));\n  };\n};\n\nexport const removeTrack = (track) => {\n  return (dispatch) => {\n    dispatch({type: \"REMOVE_TRACK\"});\n    debugger;\n    fetch(\"http://localhost:3001/tracks\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    debugger;\n    // .then((response) => response.json());\n  };\n};\n","import React from \"react\";\nimport {removeTrack} from \"../actions/tracks\";\nimport {connect} from \"react-redux\";\n\nfunction Tracks({title, status, id, track, props}) {\n  // const handleClick = () => {\n  //   // debugger;\n  //   removeTrack(track);\n  // };\n  return (\n    <li className=\"status\" key={id}>\n      <h2> {title} </h2>\n      <br />\n      <button id={track} onClick={() => props.remove(props.track)}>\n        X\n      </button>\n      Status: {status}\n    </li>\n  );\n}\n\nexport default connect(null, {removeTrack})(Tracks);\n","import React from 'react'\n\nexport default function Loading() {\n    return (\n        <h3>Loading.....</h3>\n    )\n}\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getTracks} from \"../actions/tracks\";\nimport Tracks from \"../components/Tracks\";\nimport Loading from \"../components/Loading\";\nclass TracksContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n  render() {\n    // const handleDelete = () => {};\n\n    const tracks = this.props.tracks.map((track, i) => (\n      <Tracks\n        key={i}\n        title={track.title}\n        status={track.status}\n        id={track.id}\n        track={track}\n        delete={this.props.delete}\n      />\n    ));\n    return (\n      <div>\n        <h1>TrackList</h1>\n        <ul>{this.props.loading ? <Loading /> : tracks}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    tracks: state.trackReducer.tracks,\n    loading: state.trackReducer.loading,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     remove: (track) => dispatch({type: \"REMOVE_TRACK\", payload: track}),\n//   };\n// };\nexport default connect(mapStateToProps, {getTracks})(TracksContainer);\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"../index.css\";\n\nexport default class Nav extends Component {\n  render() {\n    return (\n      <div>\n        {/* <img\n           className=\"App-logo\"\n           alt=\"logo\"\n         /> */}\n        <center>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/tracks/new\">Addtrack </Link>\n\n          <Link to=\"/tracks\">Status </Link>\n          <Link to=\"/instrumentals\">Instrumentals </Link>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {addTrack} from \"../actions/tracks\";\nimport \"../App.css\";\nclass TrackForm extends Component {\n  state = {\n    title: \"\",\n    status: \"Unknown\",\n    instrumental: \"\",\n    notes: \"\",\n\n    loading: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      // staus: event.target.value\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const track = {\n      title: this.state.title,\n      status: this.state.status,\n      links_attributes: [\n        {\n          instrumental: this.state.instrumental,\n          notes: this.state.notes,\n        },\n      ],\n    };\n    this.props.addTrack(track);\n    this.setState({\n      title: \"\",\n      status: \"\",\n      instrumental: \"\",\n      notes: \"\",\n      // status:\"Unknown\",\n\n      loading: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add New Track</h2>\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          Instrumental:\n          <input\n            type=\"text\"\n            name=\"instrumental\"\n            value={this.state.instrumental}\n            onChange={this.handleChange}\n          />\n          Notes:\n          <textarea\n            name=\"notes\"\n            value={this.state.notes}\n            onChange={this.handleChange}\n          />\n          <br />\n          Status:\n          <select\n            name=\"status\"\n            value={this.state.status}\n            onChange={this.handleChange}\n          >\n            <option value=\"Unknown\">Choose Status / Default \"Unknown\"</option>\n            <option value=\"Complete\">Complete</option>\n            <option value=\"Written But Not Recorded\">\n              Written, But Not Recorded\n            </option>\n            <option value=\"Partialy Written And Recorded\">\n              Partialy Written & Recorded\n            </option>\n            <option value=\"Lyrics No Beat\">Lyrics No Instrumental</option>\n            <option value=\"Beat No Lyrics\">Instrumental No Lyrics </option>\n          </select>\n          <input type=\"submit\" value=\"Submit Track\" />\n        </form>\n        <img\n          src=\"https://i.pinimg.com/originals/ab/45/bb/ab45bb4451536652faca51ae4f42d5dd.gif\"\n          className=\"icon\"\n          alt=\"logo\"\n        />\n      </div>\n    );\n  }\n}\nexport default connect(null, {addTrack})(TrackForm);\n","import React, {Component} from \"react\";\nimport ReactPlayer from \"react-player\";\nclass Instrumentals extends Component {\n  state = {\n    show: false,\n    note: \"\",\n  };\n\n  handleClick = () => {\n    this.setState({\n      show: !this.state.show,\n      note: this.props.link.notes,\n    });\n  };\n\n  render() {\n    const split = this.state.note\n      .split(/[\\n\\r]/g)\n      .map((split) => <p className=\"split\">{split}</p>);\n    return (\n      <div>\n        <h2>{this.props.title}</h2>\n        <ReactPlayer className=\"p\" url={this.props.instrumental} />\n\n        <button onClick={this.handleClick}>Notes</button>\n        {this.state.show ? <p className=\"myBox\">{split}</p> : \"\"}\n      </div>\n    );\n  }\n}\nexport default Instrumentals;\n","import React, {Component} from \"react\";\nimport Instrumentals from \"../components/Instrumentals\";\nimport {connect} from \"react-redux\";\nimport {getTracks} from \"../actions/tracks\";\nimport Loading from \"../components/Loading\";\nclass InstrumentalsContainer extends Component {\n  componentDidMount() {\n    this.props.getTracks();\n  }\n\n  render() {\n    const instrumentals = this.props.instrumental.map((links, i) => (\n      <Instrumentals\n        key={i}\n        instrumental={links.instrumental}\n        notes={links.notes}\n        link={links}\n        title={\n          this.props.track.find((title) => title.id === links.track_id).title\n        }\n      />\n    ));\n    //  debugger\n    return (\n      <>\n        <ul>{this.props.loading ? <Loading /> : instrumentals}</ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    track: state.trackReducer.tracks.map((track) => track),\n    instrumental: state.trackReducer.tracks.map((track) => track.links[0]),\n  };\n};\n\nexport default connect(mapStateToProps, {getTracks})(InstrumentalsContainer);\n","import React, { Component } from 'react'\nexport default class Footer extends Component {\n    render() {\n        return (\n\n            <div className=\"footer\">\n                Contact Me\n                <br/>\n                Phone: 646.337.6294\n                <br/>\n                Email: VincentServio@gmail.com\n            </div>         \n        )\n    }\n}\n","import React, { Component } from 'react'\n// import { connect } from 'react-redux'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import { Switch} from 'react-router-dom';\nimport Home from './components/Home'\nimport TracksContainer from './container/TracksContainer'\nimport Nav from './components/Nav'\nimport TrackForm from \"./container/TrackForm\"\nimport InstrumentalsContainer from './container/InstrumentalsContainter';\nimport Footer from \"./components/Footer\"\n class App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Nav/>\n        <div className=\"App\">             \n          <Switch>          \n            <Route path=\"/tracks/new\" exact component={ TrackForm } />                 \n            <Route  path=\"/instrumentals\" exact component={ InstrumentalsContainer } />\n            <Route  path=\"/tracks\" exact component={ TracksContainer } />\n            <Route path=\"/\" exact component={ Home }/>\n          </Switch >\n        </div>\n        <Footer/>\n      </Router>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport trackReducer from './trackReducer'\n\nexport const rootReducer = combineReducers({\n    trackReducer\n})","export default (state = {tracks: [], loading: false}, action) => {\n  switch (action.type) {\n    case \"LOADING_TRACKS\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"TRACKS_LOADED\":\n      return {\n        ...state,\n        tracks: action.payload,\n        loading: false,\n      };\n\n    case \"ADDING_TRACK\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"TRACK_ADDED\":\n      return {\n        ...state,\n        tracks: [...state.tracks, action.payload],\n        loading: false,\n      };\n\n    case \"REMOVE_TRACK\":\n      return {\n        ...state.tracks.filter((track) => track !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from  'react-redux'\nimport {rootReducer} from './reducers'\nimport {createStore, applyMiddleware } from 'redux'\nimport {composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))) \n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}